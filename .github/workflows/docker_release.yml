name: Release Build

on:
  push:
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Generate version tag
        id: version
        run: |
          ./scripts/version-manager.sh
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ secrets.DOCKERHUB_USERNAME }}/ffmpeg
          tags: |
            # Generated versioned tag (e.g., 7.1.1-alpine3.22.0-1)
            type=raw,value=${{ steps.version.outputs.tag }}
            # FFmpeg version tag (e.g., 7.1.1)
            type=raw,value=${{ steps.version.outputs.ffmpeg_version }}
            # 'latest' tag for version tags
            type=raw,value=latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}
          labels: |
            org.opencontainers.image.title=FFmpeg Alpine
            org.opencontainers.image.description=Lightweight FFmpeg build on Alpine Linux
            org.opencontainers.image.vendor=${{ github.repository_owner }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            BUILD_DATE=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
            VCS_REF=${{ github.sha }}
            VERSION=${{ steps.version.outputs.tag }}
            FFMPEG_VERSION=${{ steps.version.outputs.ffmpeg_version }}
            ALPINE_VERSION=${{ steps.version.outputs.alpine_version }}
      - name: Commit version update
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .version.json
          git diff --staged --quiet || git commit -m "chore: Update version to ${{ steps.version.outputs.tag }}"
          git push origin HEAD:master || echo "Version file already up to date"
